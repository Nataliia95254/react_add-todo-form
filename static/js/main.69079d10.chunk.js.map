{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["TodoInfo","todo","id","completed","title","userId","findUser","className","classnames","href","email","name","ToDoList","toDoLists","map","username","App","useState","setTitle","user","setUser","isTitleHasMistake","setIsTitleHasMistake","isSelectHasMistake","setIsSelectHasMistake","todosFromServer","setToDoLists","maxId","Math","max","item","action","method","onSubmit","event","preventDefault","newToDo","prev","addNewToDo","type","value","onChange","target","placeholder","handleUserChange","disabled","usersFromServer","onClick","find","perosn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69079d10.chunk.js","sourcesContent":["import classnames from 'classnames';\nimport { User } from '../../type/user';\nimport { Todo } from '../../type/todo';\n\ntype Props = {\n  todo: Todo;\n  findUser: (id: number) => User | undefined;\n};\n\nexport const TodoInfo: React.FC<Props> = (\n  {\n    todo: {\n      id, completed, title, userId,\n    },\n    findUser,\n  },\n) => {\n  return (\n    <article\n      data-id={id}\n      className={classnames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      <a className=\"UserInfo\" href={`mailto:${findUser(userId)?.email}`}>\n        {findUser(userId)?.name}\n      </a>\n    </article>\n  );\n};\n","import { Todo } from '../../type/todo';\nimport { TodoInfo } from '../TodoInfo';\nimport { User } from '../../type/user';\n\ntype Props = {\n  toDoLists: Todo[];\n  findUser: (id: number) => User | undefined;\n};\n\nexport const ToDoList: React.FC<Props> = ({ toDoLists, findUser }) => {\n  return (\n    <section className=\"TodoList\">\n      {toDoLists.map((todo) => (\n        <TodoInfo\n          todo={todo}\n          findUser={findUser}\n          key={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\nimport './App.scss';\nimport { ToDoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [isTitleHasMistake, setIsTitleHasMistake] = useState(false);\n  const [isSelectHasMistake, setIsSelectHasMistake] = useState(false);\n  const [toDoLists, setToDoLists] = useState(todosFromServer);\n\n  let maxId = Math.max(...toDoLists.map(item => item.id));\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(+event.target.value);\n  };\n\n  const handleAddTodo = () => {\n    if (!title) {\n      setIsTitleHasMistake(true);\n    }\n\n    if (user === 0) {\n      setIsSelectHasMistake(true);\n    }\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUser(0);\n  };\n\n  const addNewToDo = (userId: number) => {\n    const newToDo = {\n      id: maxId += 1,\n      title,\n      completed: false,\n      userId,\n    };\n\n    setToDoLists((prev) => [...prev, newToDo]);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (isTitleHasMistake || isSelectHasMistake) {\n      return;\n    }\n\n    addNewToDo(user);\n    reset();\n  };\n\n  const findUser = (id: number) => {\n    return usersFromServer.find(perosn => perosn.id === id);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => {\n              setTitle(event.target.value);\n              setIsTitleHasMistake(false);\n            }}\n            placeholder=\"Enter a title\"\n          />\n          {isTitleHasMistake\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={(event) => {\n              handleUserChange(event);\n              setIsSelectHasMistake(false);\n            }}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((item) => (\n              <option value={item.id} key={item.id}>{item.name}</option>\n            ))}\n          </select>\n\n          {isSelectHasMistake\n           && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleAddTodo}\n        >\n          Add\n        </button>\n      </form>\n      <ToDoList toDoLists={toDoLists} findUser={findUser} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}